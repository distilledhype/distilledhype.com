Title: Some Clarifications About TypeScript By @shanselman

----

Link: http://www.hanselman.com/blog/WhyDoesTypeScriptHaveToBeTheAnswerToAnything.aspx

----

Date: 10/02/2012

----

Text: Tons of JavaScript developers (including me) have been making fun of TypeScript yesterday. It was a ton of fun but Scott Hanselman has some interesting clarifications to offer today.

**First up:** TypeScript is not Dart! ([My bad!](https://twitter.com/hellokahlil/status/252809939318370304))

> People have compared TypeScript to Dart. That's comparing apples to carburetors. TypeScript builds on JavaScript so there's no JS interop issues. Dart is a native virtual machine written from scratch. Dart interops with JavaScript...but it's not JS. It doesn't even use the JavaScript number type for example.

**Secondly:** JavaScript is valid TypeScript! (I like that!)

> TypeScript is a superset of JavaScript and you write it like you write JavaScript which I like. Any existing JavaScript is already TypeScript.

**Thirdly:** It makes some ES6 features usable today! (+1)

> It gives you type checking, explicit interfaces and easier module exports. In fact, it's a little like getting some of tomorrow's ECMAScript 6 early in a way that's compatible with today's JavaScript. ES6 won't be out for at least a year but we can play with some of those features today.

**And last but not least:** My first assumption that TypeScript is JavaScript for C# developers is true! \o/

> This quote from Luke Hoban, co-creator of TypeScript really hits the spot.
>
>> "CoffeeScript is to Ruby as TypeScript is to Java/C#/C++." - Luke Hoban
>
> If you love Ruby, you'll enjoy CoffeeScript as it makes the latter more like the former. The same is true with TypeScript. It brings useful features you are using on the server into JavaScript in an ultimately compatible and syntax-friendly way.

So it looks like it is a really intelligent way to introduce features into JavaScript that Java/C#/C++ developers would like to see. But just like Dart, it most likely won't get any traction in the JavaScript community.